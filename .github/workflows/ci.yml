name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run linter
        run: npm run lint
        
      - name: Run tests
        run: npm run test
        
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: npm run build
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: dist/
          
  deploy_preview:
    name: Deploy Preview (PR)
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build
          path: dist/
          
      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        
      - name: Deploy to Supabase Preview Environment
        # IMPORTANT: The following environment variables must be configured as repository secrets in GitHub:
        # - SUPABASE_PROJECT_REF: Your Supabase project reference ID
        # - SUPABASE_ACCESS_TOKEN: Your Supabase access token
        # 
        # NOTE: IDE warnings about "Context access might be invalid" can be safely ignored.
        # These are expected during local development and will work correctly in the GitHub Actions environment.
        run: |
          supabase functions deploy scrape-job \
            --project-ref ${{ secrets.SUPABASE_PROJECT_REF }} \
            --env preview
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          
  deploy_production:
    name: Deploy Production
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment: production
    
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build
          path: dist/
          
      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        
      - name: Deploy to Supabase Production
        # IMPORTANT: The following environment variables must be configured as repository secrets in GitHub:
        # - SUPABASE_PROJECT_REF: Your Supabase project reference ID
        # - SUPABASE_ACCESS_TOKEN: Your Supabase access token
        # 
        # NOTE: IDE warnings about "Context access might be invalid" can be safely ignored.
        # These are expected during local development and will work correctly in the GitHub Actions environment.
        run: |
          supabase functions deploy scrape-job \
            --project-ref ${{ secrets.SUPABASE_PROJECT_REF }}
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
